
import os
from datetime import datetime
from io import BytesIO

from aiogram import Router, F, flags, Bot
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove, BufferedInputFile
from sqlalchemy.ext.asyncio import AsyncSession

from db.models import Game, Player, utc_plus_5
from keyboard.start import get_yes_no_kb
from state.registr import Photo

router = Router()  # [1]

@router.message(Command("start"))  # [2]
@flags.throttling_key('default')
async def cmd_start(message: Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥—É! –ì–æ—Ç–æ–≤ –ª–∏ —Ç—ã –Ω–∞–π—Ç–∏ –ø—Ä–µ–¥–∞—Ç–µ–ª—è –∏ —Å–ø–∞—Å—Ç–∏ —ç–∫–∏–ø–∞–∂ –≤ Among Us?",
        reply_markup=get_yes_no_kb()
    )

@router.message(F.text.lower() == "profile")
@flags.throttling_key('default')
async def answer_yes(message: Message, session: AsyncSession, bot: Bot):
    player = await session.get(Player, message.from_user.id)
    if not player:
        player = Player(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            is_registered=False
        )
        session.add(player)
        await session.commit()
    if player.photo:
        await bot.send_photo(chat_id=message.chat.id,caption=
            f"""
**üë§ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞:**

- **–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** `{message.from_user.username}`
- **–£—Ä–æ–≤–µ–Ω—å:** `{player.level}`

- **–ü–æ–±–µ–¥—ã:** `{player.winrate}`
- **–ü–æ—Ä–∞–∂–µ–Ω–∏—è:** `{player.losses}`


- **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** `{player.date_register}`
    """, parse_mode="Markdown",photo=BufferedInputFile(player.photo, filename="photo.jpg"))
    else:
        await message.answer(
            f"""
**üë§ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞:**

- **–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:** `{message.from_user.username}`
- **–£—Ä–æ–≤–µ–Ω—å:** `{player.level}`

- **–ü–æ–±–µ–¥—ã:** `{player.winrate}`
- **–ü–æ—Ä–∞–∂–µ–Ω–∏—è:** `{player.losses}`


- **–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** `{player.date_register}`
    """, parse_mode="Markdown")

@router.message(StateFilter(None),Command("set_photo"))
@flags.throttling_key('default')
async def set_photo(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è")
    await state.set_state(Photo.send_photo)

@router.message(
    Photo.send_photo,
    F.photo
)
async def food_chosen(message: Message, state: FSMContext, session: AsyncSession):
    file_path = await message.bot.download(file=message.photo[-1].file_id)


    # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    player = await session.get(Player, message.from_user.id)
    if not player:
        player = Player(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            is_registered=False
        )
        session.add(player)
        await session.commit()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –≤ BLOB

    player.photo = file_path.read()
    await session.commit()

    await message.answer("–í–∞—à–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    await state.clear()

@router.message(Photo.send_photo)
async def food_chosen(message: Message, state: FSMContext):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞. /set_photo")
    await state.clear()
